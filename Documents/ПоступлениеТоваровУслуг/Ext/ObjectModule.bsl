
&Вместо("ПередЗаписью")
Процедура rps_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ОбщегоНазначения.СообщитьПользователю("Сообщение из расширения");	
	ПродолжитьВызов(Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

&Перед("ПриКопировании")
Процедура rps_ПриКопировании(ОбъектКопирования)
	
	ЭтотОбъект.Комментарий = "Комментарий из расширения (перед)";
	
КонецПроцедуры

&После("ПриЗаписи")
Процедура rps_ПриЗаписи(Отказ)
	
	ОбщегоНазначения.СообщитьПользователю("Сообщение из расширения (после)");
	
КонецПроцедуры

&ИзменениеИКонтроль("ОбработкаПроведения")
Процедура rps_ОбработкаПроведения(Отказ, РежимПроведения)

	ПроверитьКорректностьЗаполненияТабличнойЧастиТовары(Отказ);
	#Удаление
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	#КонецУдаления
	#Вставка     
	Если Отказ = Истина Тогда
		Возврат;
	КонецЕсли;
	#КонецВставки

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА

	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;

	ПараметрыПроведения = Документы.ПоступлениеТоваровУслуг.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ИНФОРМАЦИОННОЙ БАЗЫ (АНАЛИЗ ОСТАТКОВ И Т.П.)

	// Таблица взаиморасчетов
	ВидДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДоговорКонтрагента, "ВидДоговора");
	Если ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером Тогда
		ТаблицаВзаиморасчеты = УчетВзаиморасчетов.ПодготовитьТаблицуВзаиморасчетовЗачетАвансовРасчетыСКомиссионером(ПараметрыПроведения.ЗачетАвансовТаблицаДокумента,
		ПараметрыПроведения.ТаблицаЗачетАвансов, ПараметрыПроведения.ЗачетАвансовРеквизиты, Отказ);
	Иначе
		ТаблицаВзаиморасчеты = УчетВзаиморасчетов.ПодготовитьТаблицуВзаиморасчетовЗачетАвансов(ПараметрыПроведения.ЗачетАвансовТаблицаДокумента,
		ПараметрыПроведения.ТаблицаЗачетАвансов, ПараметрыПроведения.ЗачетАвансовРеквизиты, Отказ);
	КонецЕсли; 

	// Таблицы документа с корректировкой сумм по курсу авансов
	СтруктураТаблицДокумента = УчетДоходовРасходов.ПодготовитьТаблицыПоступленияПоКурсуАвансов(ПараметрыПроведения.СтруктураТаблицДокумента,
	ТаблицаВзаиморасчеты, ПараметрыПроведения.ЗачетАвансовРеквизиты);

	ТаблицыНДС = Документы.ПоступлениеТоваровУслуг.ПодготовитьТаблицыНДС(СтруктураТаблицДокумента);

	// Взаиморасчеты с комиссионером по продаже
	ТаблицаВзаиморасчетыКомиссияПоПродаже = Документы.ПоступлениеТоваровУслуг.ПодготовитьТаблицуВзаиморасчетыКомиссия(ТаблицаВзаиморасчеты, 
	ПараметрыПроведения.ЗачетВыручкиКомиссионераРеквизиты, Отказ);

	// Товары и услуги, закупленные для комитентов
	ТаблицаТоварыУслугиКомиссияПоЗакупке = Документы.ПоступлениеТоваровУслуг.ПодготовитьТаблицуТоварыУслугиКомиссияПоЗакупке(
	СтруктураТаблицДокумента.ТаблицаТоварыУслугиКомиссияПоЗакупке, 
	ПараметрыПроведения.ЗачетАвансовКомиссияПоЗакупкеРеквизиты,
	ПараметрыПроведения.Реквизиты);

	// Взаиморасчеты с комитентами по договорам комиссии на закупку
	ТаблицаЗачетАвансовКомиссияПоЗакупке = Документы.ПоступлениеТоваровУслуг.ПодготовитьТаблицуЗачетАвансовКомиссияПоЗакупке(
	ТаблицаТоварыУслугиКомиссияПоЗакупке);
	ТаблицаВзаиморасчетыКомиссияПоЗакупке = УчетВзаиморасчетов.ПодготовитьТаблицуВзаиморасчетовЗачетАвансов(
	ТаблицаЗачетАвансовКомиссияПоЗакупке, Неопределено, ПараметрыПроведения.ЗачетАвансовКомиссияПоЗакупкеРеквизиты, Отказ);

	// Структура таблиц для отражения в налоговом учете УСН
	СтруктураТаблицУСН = Новый Структура;
	СтруктураТаблицУСН.Вставить("ТаблицаРасчетов", ТаблицаВзаиморасчеты);
	СтруктураТаблицУСН.Вставить("ДолгПокупателя" , ТаблицаВзаиморасчетыКомиссияПоПродаже);

	// Учет УСН-онлайн
	ТаблицаРазметкиАУСН = РазметкаОперацийАУСН.ПодготовитьТаблицуЗачетАвансаПоставщику(
	ПараметрыПроведения.Реквизиты,
	ПараметрыПроведения.РасходыАУСН,
	ТаблицаВзаиморасчеты);

	// Учет доходов и расходов ИП
	ТаблицаТоваровИП = УчетДоходовИРасходовПредпринимателя.ПодготовитьТаблицуПоступленияМПЗ(
	ПараметрыПроведения.ИПТаблицаТоваров,
	ПараметрыПроведения.ИПРеквизиты);

	ТаблицаУслугИП = УчетДоходовИРасходовПредпринимателя.ПодготовитьТаблицуПоступленияМПЗ(
	ПараметрыПроведения.ИПТаблицаУслуг,
	ПараметрыПроведения.ИПРеквизиты);

	ТаблицаОборудованияИП = УчетДоходовИРасходовПредпринимателя.ПодготовитьТаблицуПоступленияМПЗ(
	ПараметрыПроведения.ИПТаблицаОборудования,
	ПараметрыПроведения.ИПРеквизиты);

	ТаблицаОсновныеСредстваИП = УчетДоходовИРасходовПредпринимателя.ПодготовитьТаблицуПоступленияМПЗ(
	ПараметрыПроведения.ИПТаблицаОсновныеСредства,
	ПараметрыПроведения.ИПРеквизиты);

	ТаблицаПоступленияОСИП = УчетДоходовИРасходовПредпринимателя.ПодготовитьТаблицуПоступленияОС(
	ТаблицаОсновныеСредстваИП,
	ТаблицаВзаиморасчеты,
	ПараметрыПроведения.ИПРеквизиты);

	ТаблицаОплатыОСИП = УчетДоходовИРасходовПредпринимателя.ПодготовитьТаблицуОплатыОСиНМА(
	Новый Структура("МПЗ", ТаблицаПоступленияОСИП), 
	ПараметрыПроведения.Реквизиты);

	ТаблицаПрочееИП  = УчетДоходовИРасходовПредпринимателя.ПодготовитьТаблицуПоступленияМПЗ(
	ПараметрыПроведения.ИПТаблицаПрочее,
	ПараметрыПроведения.ИПРеквизиты);

	СтруктураТаблицМПЗ = Новый Структура;
	СтруктураТаблицМПЗ.Вставить("ТаблицаТоваров",      ТаблицаТоваровИП);
	СтруктураТаблицМПЗ.Вставить("ТаблицаУслуг",        ТаблицаУслугИП);
	СтруктураТаблицМПЗ.Вставить("ТаблицаОборудования", ТаблицаОборудованияИП);
	СтруктураТаблицМПЗ.Вставить("ТаблицаПрочее",       ТаблицаПрочееИП);

	ТаблицаПрочихРасчетов = УчетВзаиморасчетов.ПустаяТаблицаПоПрочимРасчетам();

	ТаблицыПоступленияОтФакторинговойКомпанииИП =
	УчетДоходовИРасходовПредпринимателя.ПодготовитьТаблицыПоступленияОтФакторинговойКомпании(
	ПараметрыПроведения.ЗачетАвансовТаблицаДокумента,
	ПараметрыПроведения.ИПРеквизиты, Движения, Отказ);

	Если ЗначениеЗаполнено(ТаблицыПоступленияОтФакторинговойКомпанииИП.ТаблицаПрочиеРасчеты) Тогда
		ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(
		ТаблицыПоступленияОтФакторинговойКомпанииИП.ТаблицаПрочиеРасчеты, ТаблицаПрочихРасчетов);
	КонецЕсли;

	Если НЕ ПроведениеСервер.ГрупповоеПерепроведение(ЭтотОбъект) Тогда
		ТаблицаСтатусовСчетов = СтатусыДокументов.ПодготовитьТаблицуСтатусовПоступленияПоСчетам(
		ПараметрыПроведения.ПоступлениеТоваровУслугПоСчету,
		ПараметрыПроведения.ПоступлениеВозвратнойТарыПоСчету,
		ПараметрыПроведения.Реквизиты);
	КонецЕсли;

	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ

	// Алгоритмы формирования проводок этого документа учитывают малоценку
	Движения.Хозрасчетный.ДополнительныеСвойства.Вставить("ДвиженияПоМалоценнымОбъектамСформированы", Истина);

	// Поступление товаров
	УчетТоваров.СформироватьДвиженияПоступлениеТоваров(СтруктураТаблицДокумента.ТаблицаТовары,
	ПараметрыПроведения.Реквизиты, Движения, Отказ);

	УчетТоваров.СформироватьДвиженияНачислениеТорговойНаценкиПоступлениеТоваров(СтруктураТаблицДокумента.ТаблицаТовары,
	ПараметрыПроведения.ПоступлениеТоваровТорговаяНаценкаРеквизиты, Движения, Отказ);

	// Поступление топлива
	УчетТоваров.СформироватьДвиженияПоступлениеПоТопливнымКартам(СтруктураТаблицДокумента.ТаблицаТопливо,
	ПараметрыПроведения.Реквизиты, Движения);

	// Поступление оборудования
	УчетОС.СформироватьДвиженияПоступлениеОборудования(СтруктураТаблицДокумента.ТаблицаОборудование,
	ПараметрыПроведения.Реквизиты, Движения, Отказ);

	// Поступление объектов строительства
	УчетОС.СформироватьДвиженияПоступлениеОбъектовСтроительства(СтруктураТаблицДокумента.ТаблицаОбъектыСтроительства,
	ПараметрыПроведения.Реквизиты, Движения, Отказ);

	// Поступление основных средств
	УчетОС.ПроверитьВозможностьИзмененияСостоянияОС(ПараметрыПроведения.ПроверкаСостоянияОСТаблица,
	ПараметрыПроведения.ПроверкаСостоянияОСРеквизиты, Отказ);

	УчетОС.СформироватьДвиженияПоступлениеОсновныхСредств(СтруктураТаблицДокумента.ТаблицаОсновныеСредства,
	ПараметрыПроведения.Реквизиты, Движения, Отказ);

	УчетГрупповыхОС.СформироватьДвиженияПоступлениеГрупповыхОбъектовОС(СтруктураТаблицДокумента.ТаблицаГрупповыеОбъектыОС,
	ПараметрыПроведения.Реквизиты, Движения, Отказ);

	// Поступление услуг
	УчетДоходовРасходов.СформироватьДвиженияПоступлениеУслуг(СтруктураТаблицДокумента.ТаблицаУслуги,
	ПараметрыПроведения.Реквизиты, Движения, Отказ);

	// Поступление тары
	УчетТоваров.СформироватьДвиженияПоступлениеТары(ПараметрыПроведения.ТаблицаТара,
	ПараметрыПроведения.Реквизиты, Движения, Отказ);

	// Поступление товаров на комиссию
	УчетТоваров.СформироватьДвиженияПоступлениеТоваровНаКомиссию(ПараметрыПроведения.ПоступлениеТоваровНаКомиссиюТаблицаТовары,
	ПараметрыПроведения.Реквизиты, Движения, Отказ);

	// Поступление в переработку
	УчетТоваров.СформироватьДвиженияПоступлениеМатериаловВПереработку(ПараметрыПроведения.ПоступлениеТоваровВПереработкуТаблицаТовары,
	ПараметрыПроведения.Реквизиты, Движения, Отказ);

	// Поступление закупленных товаров и услуг комитентов
	УчетТоваров.СформироватьДвиженияПоступлениеЗакупленныхТоваровУслугКомитентов(
	ТаблицаТоварыУслугиКомиссияПоЗакупке, ПараметрыПроведения.Реквизиты, Движения, Отказ);

	// Задолженность комитентов по закупленных для них товарам и услугам
	УчетВзаиморасчетов.СформироватьДвиженияПоступлениеЗакупленныхТоваровУслугКомитентов(
	ТаблицаТоварыУслугиКомиссияПоЗакупке, ПараметрыПроведения.Реквизиты, Движения, Отказ);

	//Движения регистра "Рублевые суммы документов в валюте"
	УчетНДСБП.СформироватьДвиженияРублевыеСуммыДокументовВВалютеПоступлениеСобственныхТоваровУслуг(СтруктураТаблицДокумента.ТаблицаТовары, 
	ПараметрыПроведения.Реквизиты, Движения, Отказ);

	УчетНДСБП.СформироватьДвиженияРублевыеСуммыДокументовВВалютеПоступлениеСобственныхТоваровУслуг(СтруктураТаблицДокумента.ТаблицаОборудование, 
	ПараметрыПроведения.Реквизиты, Движения, Отказ);

	УчетНДСБП.СформироватьДвиженияРублевыеСуммыДокументовВВалютеПоступлениеСобственныхТоваровУслуг(СтруктураТаблицДокумента.ТаблицаОбъектыСтроительства, 
	ПараметрыПроведения.Реквизиты, Движения, Отказ);

	УчетНДСБП.СформироватьДвиженияРублевыеСуммыДокументовВВалютеПоступлениеСобственныхТоваровУслуг(СтруктураТаблицДокумента.ТаблицаОсновныеСредства, 
	ПараметрыПроведения.Реквизиты, Движения, Отказ);

	УчетНДСБП.СформироватьДвиженияРублевыеСуммыДокументовВВалютеПоступлениеСобственныхТоваровУслуг(СтруктураТаблицДокумента.ТаблицаГрупповыеОбъектыОС,
	ПараметрыПроведения.Реквизиты, Движения, Отказ);

	УчетНДСБП.СформироватьДвиженияРублевыеСуммыДокументовВВалютеПоступлениеСобственныхТоваровУслуг(СтруктураТаблицДокумента.ТаблицаУслуги, 
	ПараметрыПроведения.Реквизиты, Движения, Отказ);

	УчетНДСБП.СформироватьДвиженияРублевыеСуммыДокументовВВалютеБезНДС(ПараметрыПроведения.ТаблицаТара, 
	ПараметрыПроведения.Реквизиты, Движения, Отказ);

	УчетНДСБП.СформироватьДвиженияРублевыеСуммыДокументовВВалюте(ПараметрыПроведения.ПоступлениеТоваровНаКомиссиюТаблицаТовары, 
	ПараметрыПроведения.Реквизиты, Движения, Отказ);

	УчетНДСБП.СформироватьДвиженияРублевыеСуммыДокументовВВалютеБезНДС(ПараметрыПроведения.ПоступлениеТоваровВПереработкуТаблицаТовары, 
	ПараметрыПроведения.Реквизиты, Движения, Отказ);

	УчетНДСБП.СформироватьДвиженияРублевыеСуммыДокументовВВалюте(ТаблицаТоварыУслугиКомиссияПоЗакупке, 
	ПараметрыПроведения.Реквизиты, Движения, Отказ);

	// Движения регистра  ИмпортТоваровТаможенныйСоюз
	РегистрыСведений.ИмпортТоваровТаможенныйСоюз.СформироватьДвиженияИмпортТоваровТС(ПараметрыПроведения.Реквизиты, Движения, Отказ);

	// Учет НДС
	УчетНДС.СформироватьДвиженияПоступлениеТоваровУслугОтПоставщика(
	ТаблицыНДС.Товары, ТаблицыНДС.Услуги, ПараметрыПроведения.НомераГТД,
	ПараметрыПроведения.Реквизиты, Движения, Отказ);

	УчетНДСРаздельный.СформироватьДвиженияПоступлениеТоваровУслугОтПоставщика(
	ТаблицыНДС.Товары, ТаблицыНДС.Услуги, ПараметрыПроведения.Реквизиты,
	Движения, Отказ);

	УчетНДС.СформироватьДвиженияЖурналУчетаСчетовФактурРегистрация(
	ПараметрыПроведения.РегистрацияВЖурналеУчетаСчетовФактур, Движения, Отказ);

	// Зачет аванса
	УчетВзаиморасчетов.СформироватьДвиженияЗачетАвансов(ТаблицаВзаиморасчеты,
	ПараметрыПроведения.ЗачетАвансовРеквизиты, Движения, Отказ);

	// Зачет аванса комитентов 
	УчетВзаиморасчетов.СформироватьДвиженияЗачетАвансов(ТаблицаВзаиморасчетыКомиссияПоЗакупке, 
	ПараметрыПроведения.ЗачетАвансовКомиссияПоЗакупкеРеквизиты, Движения, Отказ);

	// Учет прослеживаемых товаров
	ПрослеживаемыеОперации = ПараметрыПроведения.ПрослеживаемыеОперации;

	ПрослеживаемостьБП.РассчитатьТаблицуПрослеживаемыеОперацииВРублях(
	ПрослеживаемыеОперации,
	СтруктураТаблицДокумента.ТаблицаТовары,
	ПараметрыПроведения.Реквизиты);

	ПрослеживаемостьБП.РассчитатьТаблицуПрослеживаемыеОперацииВРублях(
	ПрослеживаемыеОперации,
	СтруктураТаблицДокумента.ТаблицаОборудование,
	ПараметрыПроведения.Реквизиты);

	ПрослеживаемостьБП.РассчитатьТаблицуПрослеживаемыеОперацииВРублях(
	ПрослеживаемыеОперации,
	ТаблицаТоварыУслугиКомиссияПоЗакупке,
	ПараметрыПроведения.Реквизиты);

	ПрослеживаемыеОперацииОС = ПараметрыПроведения.ПрослеживаемыеОперацииОС;
	ПрослеживаемостьБП.РассчитатьТаблицуПрослеживаемыеОперацииВРублях(
	ПрослеживаемыеОперацииОС,
	СтруктураТаблицДокумента.ТаблицаОсновныеСредства,
	ПараметрыПроведения.Реквизиты,
	Истина);

	ПрослеживаемостьБП.СформироватьДвиженияПоступлениеТоваров(
	ПараметрыПроведения.ПрослеживаемыеТовары, 
	ПрослеживаемыеОперации,
	ПараметрыПроведения.РНПТ,
	ПараметрыПроведения.Реквизиты, 
	Движения);

	ПрослеживаемостьБП.СформироватьДвиженияПоступлениеОС(
	ПараметрыПроведения.ПрослеживаемыеОС, 
	ПрослеживаемыеОперацииОС,
	ПараметрыПроведения.РНПТОС,
	ПараметрыПроведения.Реквизиты, 
	Движения);

	// УСН
	СуммаСторноРасхода = 0;
	УчетУСН.ПоступлениеРасходовУСН(ПараметрыПроведения.УСНТаблицаРасходов,
	ПараметрыПроведения.УСНРеквизиты, СуммаСторноРасхода, Движения, Отказ);

	Если НЕ Отказ И Движения.РасходыПриУСН.Количество() > 0 Тогда
		Движения.РасходыПриУСН.Записать(Истина);
		Движения.РасходыПриУСН.Записывать = Ложь;
	КонецЕсли;

	НалоговыйУчетУСН.СформироватьДвиженияУСН(ЭтотОбъект, СтруктураТаблицУСН);

	// УСН-онлайн
	РазметкаОперацийАУСН.СформироватьДвиженияПоступлениеРасходов(ПараметрыПроведения.Реквизиты,
	ПараметрыПроведения.РасходыАУСН, Движения);

	РазметкаОперацийАУСН.СформироватьДвиженияРазметки(ПараметрыПроведения.Реквизиты,
	ТаблицаРазметкиАУСН, Движения);

	// Учет доходов и расходов ИП
	УчетДоходовИРасходовПредпринимателя.СформироватьДвиженияПоступлениеМПЗ(СтруктураТаблицМПЗ,
	ТаблицаВзаиморасчеты, ,ПараметрыПроведения.ИПРеквизиты, Движения, Отказ);

	УчетДоходовИРасходовПредпринимателя.СформироватьДвиженияПоступлениеОС(ТаблицаПоступленияОСИП,
	ПараметрыПроведения.ИПРеквизиты, Движения, Отказ);

	УчетДоходовИРасходовПредпринимателя.РегистрацияСведенийОбОплатеОСиНМА(ТаблицаОплатыОСИП,
	ПараметрыПроведения.ИПРеквизиты, Движения, Отказ);

	УчетВзаиморасчетов.СформироватьДвиженияПоПрочимРасчетам(ТаблицаПрочихРасчетов, Движения, Отказ);

	УчетДоходовИРасходовПредпринимателя.СформироватьДвиженияЗачетОплатыПокупателя(
	ТаблицыПоступленияОтФакторинговойКомпанииИП.ТаблицаИПМПЗОтгруженные,
	ТаблицыПоступленияОтФакторинговойКомпанииИП.ТаблицаВзаиморасчеты, 
	ПараметрыПроведения.Реквизиты, Движения, Отказ);

	// Переоценка валютных остатков - после формирования проводок всеми другими механизмами
	ТаблицаПереоценка = УчетДоходовРасходов.ПодготовитьТаблицуПереоценкиДвиженийДокумента(
	ПараметрыПроведения.Реквизиты, Движения, Отказ);

	УчетДоходовРасходов.СформироватьДвиженияПереоценкаВалютныхОстатков(ТаблицаПереоценка,
	ПараметрыПроведения.Реквизиты, Движения, Отказ);

	УчетДоходовРасходов.СформироватьДвиженияРасчетПереоценкиВалютныхСредств(ТаблицаПереоценка,
	ПараметрыПроведения.Реквизиты, Движения, Отказ);

	УчетУСН.СформироватьДвиженияПереоценкаВалютныхОстатков(ТаблицаПереоценка,
	ПараметрыПроведения.Реквизиты, Движения, Отказ);

	// Статусы счетов на оплату поставщика.
	Если НЕ ПроведениеСервер.ГрупповоеПерепроведение(ЭтотОбъект) Тогда
		СтатусыДокументов.СформироватьДвиженияСтатусовДокументов(
		ТаблицаСтатусовСчетов, ПараметрыПроведения.Реквизиты);
	КонецЕсли;

	// Отложенные расчеты с контрагентами.
	УчетВзаиморасчетовОтложенноеПроведение.ЗарегистрироватьОтложенныеРасчетыСКонтрагентами(
	ЭтотОбъект, Отказ, ПараметрыПроведения.РасчетыСКонтрагентамиОтложенноеПроведение);

	// Регистрация в последовательности
	Документы.ПоступлениеТоваровУслуг.ЗарегистрироватьОтложенныеРасчетыВПоследовательности(
	ЭтотОбъект, ПараметрыПроведения, Отказ);

	ПроведениеСервер.УстановитьЗаписьОчищаемыхНаборовЗаписей(ЭтотОбъект);

	Движения.Записать();

	ПараметрыДействия = УчетНДСПереопределяемый.НовыеПараметрыСостоянияСчетаФактуры("Проведен", ЭтотОбъект, "СчетФактураПолученный");
	УчетНДСПереопределяемый.УстановитьСостояниеСчетаФактуры(ПараметрыДействия, Отказ, НЕ УстановленСтатусДокумента);

КонецПроцедуры
